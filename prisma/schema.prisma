generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid()) @db.Uuid
  userName String
  email    String    @unique
  avatar   String
  homePage String
  Comment  Comment[]

  @@unique([id, userName, avatar, homePage])
  @@map("users")
}

model Comment {
  id    String  @id @default(uuid()) @db.Uuid
  text  String
  file  String?
  image String?

  userId   String @db.Uuid
  user     User   @relation(fields: [userId, userName, avatar, homePage], references: [id, userName, avatar, homePage])
  userName String
  avatar   String
  homePage String
  parentId String?   @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comments")
}

// model Comment {
//   id    String  @id @default(uuid()) @db.Uuid
//   text  String
//   file  String?
//   image String?

//   userId   String @db.Uuid
//   user     User   @relation(fields: [userId, userName, avatar, homePage], references: [id, userName, avatar, homePage])
//   userName String
//   avatar   String
//   homePage String

//   children Comment[] @relation("ParentChild")
//   parent   Comment?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
//   parentId String?   @db.Uuid

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("comments")
// }
